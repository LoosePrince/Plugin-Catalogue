name: Plugin Data Updater
on:
  workflow_dispatch:        # 手动触发
  push:                     # 当plugins目录有更新时触发
    paths:
      - 'plugins/**'
  schedule:                 # 定时触发（每小时45分）
    - cron: '45 * * * *'    # 每小时的45分执行
jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0  # 获取完整历史以便后续操作
        
    - name: Set timezone to Beijing
      run: |
        sudo timedatectl set-timezone Asia/Shanghai
        echo "Current Time: $(date)"
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: pip install -r requirements.txt
      
    - name: 复制 main 分支的 data 文件夹
      run: |
        mkdir -p temp_data
        if [ -d "data" ]; then
          cp -r data/* temp_data/ 2>/dev/null || echo "data 文件夹为空或不存在，创建空文件夹"
        fi
        echo "已复制 main 分支的 data 文件夹内容"
        
    - name: 运行爬虫脚本，创建/更新 plugins.json
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        CACHE_ENABLED: 'true'
      run: |
        python scripts/plugin_scraper.py \
          --timeout 30 \
          --retry 5 || {
          echo "Scraper execution failed" >&2
          exit 1
        }
        
    - name: 将生成的 plugins.json 移动到临时 data 文件夹
      run: |
        if [ -f "plugins.json" ]; then
          cp plugins.json temp_data/
          echo "已将 plugins.json 复制到 temp_data"
        elif [ -f "data/plugins.json" ]; then
          cp data/plugins.json temp_data/
          echo "已将 data/plugins.json 复制到 temp_data"
        else
          echo "警告: 未找到 plugins.json 文件"
        fi
        
    - name: 配置 Git 身份
      run: |
        git config user.name "Automated Updater"
        git config user.email "actions@users.noreply.github.com"
        
    - name: 切换到无历史 meta 分支
      run: |
        git checkout --orphan meta
        git rm -rf . 2>/dev/null || echo "清空工作目录"
        
    - name: 添加完整的 data 文件夹内容和 README.md 并提交
      run: |
        # 创建 data 文件夹并复制所有内容
        mkdir -p data
        cp -r temp_data/* data/ 2>/dev/null || echo "temp_data 为空"
        
        # 复制 data/README.md 到根目录作为分支描述
        if [ -f "data/README.md" ]; then
          cp data/README.md README.md
          echo "已将 data/README.md 复制到根目录"
        else
          echo "警告: 未找到 data/README.md 文件"
        fi
        
        # 添加所有内容
        git add data README.md
        
        # 检查是否有变更
        if git diff --staged --quiet; then
          echo "没有变更需要提交"
          exit 0
        fi
        
        # 提交变更
        git commit -m "Auto-update: $(date +'%Y-%m-%d %H:%M')"
        
    - name: 强制推送到 meta 分支（覆盖历史）
      run: |
        git push --force origin meta
        
    - name: Cleanup
      if: always()
      run: |
        rm -rf temp_data
        history -c 2>/dev/null || true
        rm -rf ~/.bash_history 2>/dev/null || true
        echo "Cleanup complete"